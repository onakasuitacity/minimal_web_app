version: '3'

services:
    reverse-proxy:
        image: jwilder/nginx-proxy:alpine
        container_name: reverse-proxy
        ports:
            - 80:80
            - 443:443
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - certs:/etc/nginx/certs:ro
            - nginx-static:/usr/share/nginx/html
        labels:
            com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: ''
        networks:
            - test

    letsencrypt:
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: letsencrypt
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - certs:/etc/nginx/certs:rw
            - nginx-static:/usr/share/nginx/html
            - vhost:/etc/nginx/vhost.d
        depends_on:
            - reverse-proxy

    web:
        image: nginx
        container_name: nginx
        # ports:
        #     - 80:80
        volumes:
            - ./web/conf.d:/etc/nginx/conf.d
            # - reverse-proxy_nginx-static:/usr/share/nginx/html
            - nginx-static:/usr/share/nginx/html
        environment:
            VIRTUAL_HOST: onakasuitacity.tk
            LETSENCRYPT_HOST: onakasuitacity.tk
            LETSENCRYPT_EMAIL: rockstarogk@yahoo.co.jp
            LETSENCRYPT_TEST: "true"
        depends_on:
            - letsencrypt
            - app
        networks:
            - frontend
            # - reverse-proxy_default
            - test
    app:
        build: ./app
        image: min_app
        container_name: app
        depends_on:
            - db
        networks:
            - frontend
            - backend
    db:
        image: mariadb
        container_name: mariadb
        volumes:
            - ./db/init.d:/docker-entrypoint-initdb.d
            - db_volume:/var/lib/mysql
        environment:
            - MARIADB_ROOT_PASSWORD
        networks:
            - backend

volumes:
    db_volume:
    # reverse-proxy_nginx-static:
    #     external: true
    certs:
    nginx-static:
    vhost:

networks:
    frontend:
    backend:
    # reverse-proxy_default:
    #     external: true
    test: